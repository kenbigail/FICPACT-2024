{
  "version": 3,
  "sources": ["../../jwt-decode/build/esm/index.js", "../../@kinde-oss/kinde-auth-pkce-js/dist/kinde-auth-pkce-js.esm.js"],
  "sourcesContent": ["export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n", "import { jwtDecode } from 'jwt-decode';\n\n// Generated by genversion.\nconst version = '3.0.30';\n\nconst SESSION_PREFIX = 'pkce-code-verifier';\nvar flagDataTypeMap;\n(function (flagDataTypeMap) {\n    flagDataTypeMap[\"s\"] = \"string\";\n    flagDataTypeMap[\"i\"] = \"integer\";\n    flagDataTypeMap[\"b\"] = \"boolean\";\n})(flagDataTypeMap || (flagDataTypeMap = {}));\n\n// Base64-urlencodes the input string\nfunction base64UrlEncode(str) {\n    // Convert the ArrayBuffer to string using Uint8 array to conver to what btoa accepts.\n    // btoa accepts chars only within ascii 0-255 and base64 encodes them.\n    // Then convert the base64 encoded to base64url encoded\n    //   (replace + with -, replace / with _, trim trailing =)\n    const numberArray = Array.from(new Uint8Array(str));\n    return btoa(String.fromCharCode.apply(null, numberArray))\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/, '');\n}\n\n// Calculate the SHA256 hash of the input text.\n// Returns a promise that resolves to an ArrayBuffer\nfunction sha256(plain) {\n    const encoder = new TextEncoder();\n    const data = encoder.encode(plain);\n    return window.crypto.subtle.digest('SHA-256', data);\n}\n\n// Return the base64-urlencoded sha256 hash for the PKCE challenge\nasync function pkceChallengeFromVerifier(v) {\n    const hashed = await sha256(v);\n    return base64UrlEncode(hashed);\n}\n\nfunction randomString() {\n    const array = new Uint32Array(28);\n    window.crypto.getRandomValues(array);\n    return Array.from(array, (dec) => ('0' + dec.toString(16)).substr(-2)).join('');\n}\n\nconst isValidJwt = (jwtToken) => {\n    const unixTime = Math.floor(Date.now() / 1000);\n    return jwtToken.exp > unixTime;\n};\n\nconst setupChallenge = async (authorizationEndpoint, appState) => {\n    const state = randomString();\n    const code_verifier = randomString(); // the secret\n    // Hash and base64-urlencode the secret to use as the challenge\n    const code_challenge = await pkceChallengeFromVerifier(code_verifier);\n    sessionStorage.setItem(`${SESSION_PREFIX}-${state}`, JSON.stringify({\n        codeVerifier: code_verifier,\n        appState\n    }));\n    // Build and encode the authorisation request url\n    const url = new URL(authorizationEndpoint);\n    return { state, code_challenge, url };\n};\n\nconst createStore = () => {\n    let items = {};\n    const getItem = (key) => {\n        return items[key];\n    };\n    const setItem = (key, value) => {\n        items[key] = value;\n    };\n    const removeItem = (key) => {\n        delete items[key];\n    };\n    const reset = () => {\n        items = {};\n    };\n    return {\n        reset,\n        getItem,\n        removeItem,\n        setItem\n    };\n};\nconst store = createStore();\n\nconst getClaim = (claim, tokenKey = 'access_token') => {\n    const token = store.getItem(`kinde_${tokenKey}`);\n    return token ? { name: claim, value: token[claim] } : null;\n};\n\nconst getClaimValue = (claim, tokenKey = 'access_token') => {\n    const obj = getClaim(claim, tokenKey);\n    return obj && obj.value;\n};\n\nconst getFlag = (code, defaultValue, flagType) => {\n    const flags = getClaimValue('feature_flags');\n    const flag = (flags && flags[code] ? flags[code] : {});\n    if (flag.v == null && defaultValue == null) {\n        throw Error(`Flag ${code} was not found, and no default value has been provided`);\n    }\n    if (flagType && flag.t && flagType !== flag.t) {\n        throw Error(`Flag ${code} is of type ${flagDataTypeMap[flag.t]} - requested type ${flagDataTypeMap[flagType]}`);\n    }\n    return {\n        code,\n        type: flagDataTypeMap[flag.t || flagType],\n        value: (flag.v == null ? defaultValue : flag.v),\n        is_default: flag.v == null\n    };\n};\n\nconst getBooleanFlag = (code, defaultValue) => {\n    try {\n        const flag = getFlag(code, defaultValue, 'b');\n        return flag.value;\n    }\n    catch (err) {\n        console.error(err);\n        return err;\n    }\n};\n\nconst getIntegerFlag = (code, defaultValue) => {\n    try {\n        const flag = getFlag(code, defaultValue, 'i');\n        return flag.value;\n    }\n    catch (err) {\n        console.error(err);\n        return err;\n    }\n};\n\nconst getStringFlag = (code, defaultValue) => {\n    try {\n        const flag = getFlag(code, defaultValue, 's');\n        return flag.value;\n    }\n    catch (err) {\n        console.error(err);\n        return err;\n    }\n};\n\nconst getUserOrganizations = () => {\n    const orgCodes = (getClaimValue('org_codes', 'id_token') ?? []);\n    return {\n        orgCodes\n    };\n};\n\nconst createKindeClient = async (options) => {\n    if (!options) {\n        throw Error('Please provide your Kinde credentials');\n    }\n    if (options !== Object(options)) {\n        throw Error('The Kinde SDK must be initiated with an object');\n    }\n    const { audience, client_id: clientId, domain, is_dangerously_use_local_storage = false, redirect_uri, logout_uri = redirect_uri, on_redirect_callback, scope = 'openid profile email offline', proxy_redirect_uri, _framework, _frameworkVersion } = options;\n    if (audience && typeof audience !== 'string') {\n        throw Error('Please supply a valid audience for your api');\n    }\n    if (scope && typeof scope !== 'string') {\n        throw Error('Please supply a valid scope');\n    }\n    if (!redirect_uri || typeof options.redirect_uri !== 'string') {\n        throw Error('Please supply a valid redirect_uri for your users to be redirected after successful authentication');\n    }\n    if (!domain || typeof domain !== 'string') {\n        throw Error('Please supply a valid Kinde domain so we can connect to your account');\n    }\n    if (typeof is_dangerously_use_local_storage !== 'boolean') {\n        throw TypeError('Please supply a boolean value for is_dangerously_use_local_storage');\n    }\n    const client_id = clientId || 'spa@live';\n    //   Indicates using a custom domain on a production environment\n    const is_use_cookie = !is_dangerously_use_local_storage && !domain.includes('.kinde.com');\n    const config = {\n        audience,\n        client_id,\n        redirect_uri,\n        authorization_endpoint: `${domain}/oauth2/auth`,\n        token_endpoint: `${domain}/oauth2/token`,\n        requested_scopes: scope,\n        domain,\n        _framework,\n        _frameworkVersion\n    };\n    const setStore = (data) => {\n        if (!data || data.error)\n            return;\n        const accessToken = jwtDecode(data.access_token);\n        const idToken = jwtDecode(data.id_token);\n        store.setItem('kinde_token', data);\n        store.setItem('kinde_access_token', accessToken);\n        store.setItem('kinde_id_token', idToken);\n        store.setItem('user', {\n            id: idToken.sub,\n            given_name: idToken.given_name,\n            family_name: idToken.family_name,\n            email: idToken.email,\n            picture: idToken.picture\n        });\n        if (is_dangerously_use_local_storage) {\n            localStorage.setItem('kinde_refresh_token', data.refresh_token);\n        }\n        else {\n            store.setItem('kinde_refresh_token', data.refresh_token);\n        }\n    };\n    const useRefreshToken = async ({ tokenType } = { tokenType: 'kinde_access_token' }) => {\n        const refresh_token = is_dangerously_use_local_storage\n            ? localStorage.getItem('kinde_refresh_token')\n            : store.getItem('kinde_refresh_token');\n        if (refresh_token || is_use_cookie) {\n            try {\n                const response = await fetch(config.token_endpoint, {\n                    method: 'POST',\n                    ...(is_use_cookie && { credentials: 'include' }),\n                    headers: new Headers({\n                        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\n                        'Kinde-SDK': `\n            ${config._framework || 'JavaScript'}/${config._frameworkVersion || version}`\n                    }),\n                    body: new URLSearchParams({\n                        client_id: config.client_id,\n                        grant_type: 'refresh_token',\n                        ...(!is_use_cookie && refresh_token && { refresh_token })\n                    })\n                });\n                const data = await response.json();\n                setStore(data);\n                if (tokenType === 'kinde_id_token') {\n                    return data.id_token;\n                }\n                return data.access_token;\n            }\n            catch (err) {\n                console.error(err);\n            }\n        }\n    };\n    const getTokenType = async (tokenType) => {\n        const token = store.getItem('kinde_token');\n        if (!token) {\n            return await useRefreshToken({ tokenType });\n        }\n        const tokenToReturn = store.getItem(tokenType);\n        const isTokenValid = isValidJwt(tokenToReturn);\n        if (isTokenValid) {\n            return tokenType === 'kinde_access_token'\n                ? token.access_token\n                : token.id_token;\n        }\n        else {\n            return await useRefreshToken({ tokenType });\n        }\n    };\n    const getToken = async () => {\n        return await getTokenType('kinde_access_token');\n    };\n    const getIdToken = async () => {\n        return await getTokenType('kinde_id_token');\n    };\n    const isAuthenticated = async () => {\n        const accessToken = store.getItem('kinde_access_token');\n        if (!accessToken) {\n            return false;\n        }\n        const isTokenValid = isValidJwt(accessToken);\n        if (isTokenValid) {\n            return true;\n        }\n        await useRefreshToken();\n        return true;\n    };\n    const getPermissions = () => {\n        const orgCode = getClaimValue('org_code');\n        const permissions = (getClaimValue('permissions') ?? []);\n        return {\n            permissions,\n            orgCode\n        };\n    };\n    const getPermission = (key) => {\n        const orgCode = getClaimValue('org_code');\n        const permissions = (getClaimValue('permissions') ?? []);\n        return {\n            isGranted: permissions.some((p) => p === key),\n            orgCode\n        };\n    };\n    const getOrganization = () => {\n        const orgCode = getClaimValue('org_code');\n        return {\n            orgCode\n        };\n    };\n    const handleRedirectToApp = async (q) => {\n        const code = q.get('code');\n        const state = q.get('state');\n        const error = q.get('error');\n        if (error) {\n            console.error(`Error returned from authorization server: ${error}`);\n        }\n        const stringState = sessionStorage.getItem(`${SESSION_PREFIX}-${state}`);\n        // Verify state\n        if (!stringState) {\n            console.error('Invalid state');\n        }\n        else {\n            const { appState, codeVerifier } = JSON.parse(stringState);\n            // Exchange authorisation code for an access token\n            try {\n                const response = await fetch(config.token_endpoint, {\n                    method: 'POST',\n                    ...(is_use_cookie && { credentials: 'include' }),\n                    headers: new Headers({\n                        'Content-type': 'application/x-www-form-urlencoded; charset=UTF-8',\n                        'Kinde-SDK': `${config._framework || 'JavaScript'}/${config._frameworkVersion || version}`\n                    }),\n                    body: new URLSearchParams({\n                        client_id: config.client_id,\n                        code,\n                        code_verifier: codeVerifier,\n                        grant_type: 'authorization_code',\n                        redirect_uri: config.redirect_uri\n                    })\n                });\n                const data = await response.json();\n                setStore(data);\n                // Remove auth code from address bar\n                const url = new URL(window.location.toString());\n                url.search = '';\n                sessionStorage.removeItem(`${SESSION_PREFIX}-${state}`);\n                const user = getUser();\n                window.history.pushState({}, '', url);\n                if (on_redirect_callback) {\n                    on_redirect_callback(user, appState);\n                }\n            }\n            catch (err) {\n                console.error(err);\n                sessionStorage.removeItem(`${SESSION_PREFIX}-${state}`);\n            }\n        }\n    };\n    const redirectToKinde = async (options) => {\n        const { app_state, start_page, is_create_org, org_name = '', org_code, authUrlParams = {} } = options;\n        const { state, code_challenge, url } = await setupChallenge(config.authorization_endpoint, app_state);\n        const searchParams = {\n            redirect_uri,\n            client_id,\n            response_type: 'code',\n            scope: config.requested_scopes,\n            code_challenge,\n            code_challenge_method: 'S256',\n            state\n        };\n        if (start_page) {\n            searchParams.start_page = start_page;\n        }\n        if (org_code) {\n            searchParams.org_code = org_code;\n        }\n        if (is_create_org) {\n            searchParams.is_create_org = String(is_create_org);\n            searchParams.org_name = org_name;\n        }\n        const urlSearchParams = new URLSearchParams(Object.assign(authUrlParams, searchParams));\n        if (audience) {\n            /* if multiple audiences requested it should appear multiple times in the query string */\n            audience\n                .trim()\n                .split(/\\s+/)\n                .forEach((aud) => {\n                urlSearchParams.append('audience', aud);\n            });\n        }\n        url.search = String(urlSearchParams);\n        window.location.href = url.toString();\n    };\n    const register = async (options) => {\n        await redirectToKinde({\n            ...options,\n            start_page: 'registration'\n        });\n    };\n    const login = async (options) => {\n        await redirectToKinde({\n            ...options\n        });\n    };\n    const createOrg = async (options) => {\n        await redirectToKinde({\n            ...options,\n            start_page: 'registration',\n            is_create_org: true\n        });\n    };\n    const getUser = () => {\n        return store.getItem('user');\n    };\n    const getUserProfile = async () => {\n        const token = await getToken();\n        const headers = {\n            Accept: 'application/json',\n            Authorization: `Bearer ${token}`\n        };\n        try {\n            const res = await fetch(`${config.domain}/oauth2/v2/user_profile`, {\n                method: 'GET',\n                headers: headers\n            });\n            const json = await res.json();\n            store.setItem('user', {\n                id: json.sub,\n                given_name: json.given_name,\n                family_name: json.family_name,\n                email: json.email,\n                picture: json.picture\n            });\n            return store.getItem('user');\n        }\n        catch (err) {\n            console.error(err);\n        }\n    };\n    const logout = async () => {\n        const url = new URL(`${config.domain}/logout`);\n        try {\n            store.reset();\n            if (is_dangerously_use_local_storage) {\n                localStorage.removeItem('kinde_refresh_token');\n            }\n            const searchParams = new URLSearchParams({\n                redirect: logout_uri\n            });\n            url.search = String(searchParams);\n            window.location.href = url.toString();\n        }\n        catch (err) {\n            console.error(err);\n        }\n    };\n    const init = async () => {\n        const q = new URLSearchParams(window.location.search);\n        // Is a redirect from Kinde Auth server\n        if (isKindeRedirect(q)) {\n            await handleRedirectToApp(q);\n        }\n        else {\n            // For onload / new tab / page refresh\n            if (is_use_cookie || is_dangerously_use_local_storage) {\n                await useRefreshToken();\n            }\n        }\n    };\n    const isKindeRedirect = (searchParams) => {\n        // Check if the search params hve the code parameter\n        const hasOauthCode = searchParams.has('code');\n        if (!hasOauthCode)\n            return false;\n        // Also check if redirect_uri matches current url\n        const { protocol, host, pathname } = window.location;\n        const currentRedirectUri = proxy_redirect_uri || `${protocol}//${host}${pathname}`;\n        return (currentRedirectUri === redirect_uri ||\n            currentRedirectUri === `${redirect_uri}/`);\n    };\n    await init();\n    return {\n        getToken,\n        getIdToken,\n        getUser,\n        getUserProfile,\n        login,\n        logout,\n        register,\n        isAuthenticated,\n        createOrg,\n        getClaim,\n        getFlag,\n        getBooleanFlag,\n        getStringFlag,\n        getIntegerFlag,\n        getPermissions,\n        getPermission,\n        getOrganization,\n        getUserOrganizations\n    };\n};\n\nexport { createKindeClient as default };\n"],
  "mappings": "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",
  "names": ["flagDataTypeMap", "options"]
}
